<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">
	<!-- used for tes the method -->
	<context:component-scan base-package="com.hyun"></context:component-scan>
	<cache:annotation-driven cache-manager ="cacheManager" />
	<!--cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id ="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name = "configLocation" value="classpath:ehcache.xml"/>
		<!--<propertyname="shared"value="true"/> -->
	</bean>
		<!--声明cacheManager -->
		<bean id = "cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
			<property name = "cacheManager" ref="ehcache" />
		</bean>
			<!-- 配置源 <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
				destroy-method="close"> <property name="driverClassName" value="com.cloudwave.jdbc.CloudDriver"></property> 
				<property name="url" value=""></property> <property name="username" value=""></property> 
				<property name="password" value=""></property> <property name="maxTotal" 
				value="20"/> <property name="maxIdle" value="10"/> <property name="initialSize" 
				value="1"/> <property name="maxWaitMillis" value="3000"/> <property name="defaultAutoCommit" 
				value="true"/> <property name="removeAbandonedTimeout" value="60"/> <property 
				name="logAbandoned" value="true"/> </bean> <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" 
				abstract="false" lazy-init="false" autowire="default" > <property name="dataSource"> 
				<ref bean="dataSource" /> </property> </bean> -->
			<!-- sqlSessionFactory <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
				<property name="dataSource" ref="dataSource"></property> -->
			<!-- 配置mybatis 配置文件路径 <property name="configLocation" value="classpath:mybatis.xml"></property> 
				<property name="mapperLocations"> <list> <value></value> </list> </property> 
				</bean> -->
			<!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
				> <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg> </bean> -->
			<bean id="taskScheduler"
				class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
				<property name="waitForTasksToCompleteOnShutdown" value="true" />
				<property name="poolSize" value="1000" />
			</bean>

			<bean id="taskExecutor"
				class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
				<property name="corePoolSize" value="5" />
				<property name="maxPoolSize" value="10" />
				<property name="queueCapacity" value="25" />
			</bean>
</beans>